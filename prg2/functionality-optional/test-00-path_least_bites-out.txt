> # Test path_least_bites
> clear_all
Cleared all bites
> clear_connections
Cleared all connections
> all_bites
No bites!
> # Add bites
> add_bite 1 "🍌" (2,2)
Bite:
   🍌: pos=(2,2), id=1
> add_bite 2 "🍉" (6,6)
Bite:
   🍉: pos=(6,6), id=2
> add_bite 3 "🎂" (2, 8)
Bite:
   🎂: pos=(2,8), id=3
> add_bite 4 "🍏" (3,5)
Bite:
   🍏: pos=(3,5), id=4
> get_bite_count
Number of bites: 4
> # Add connections
> add_connection 01 1 2 (2,6)
Connection:
   id=1
> add_connection 02 2 3 (6,8)
Connection:
   id=2
> # Test basic routing
> path_least_bites 1 2
1. (2,2) -> (2,6) (distance 4)
2. (2,6) -> (6,6) (distance 8)
3. (6,6) (distance 8)
> path_least_bites 2 3
1. (6,6) -> (6,8) (distance 2)
2. (6,8) -> (2,8) (distance 6)
3. (2,8) (distance 6)
> path_least_bites 1 3
1. (2,2) -> (2,6) (distance 4)
2. (2,6) -> (6,6) (distance 8)
3. (6,6) -> (6,8) (distance 10)
4. (6,8) -> (2,8) (distance 14)
5. (2,8) (distance 14)
> path_least_bites 3 2
1. (2,8) -> (6,8) (distance 4)
2. (6,8) -> (6,6) (distance 6)
3. (6,6) (distance 6)
> path_least_bites 3 1
1. (2,8) -> (6,8) (distance 4)
2. (6,8) -> (6,6) (distance 6)
3. (6,6) -> (2,6) (distance 10)
4. (2,6) -> (2,2) (distance 14)
5. (2,2) (distance 14)
> # Test non-existing bite
> path_least_bites 1 5
Input BiteID was not found
> # Test Non-existing path
> path_least_bites 1 4
Path not found!
> # Test a T-crossing
> add_connection 03 4 1 (3,2)
Connection:
   id=3
> path_least_bites 3 4
1. (2,8) -> (6,8) (distance 4)
2. (6,8) -> (6,6) (distance 6)
3. (6,6) -> (2,6) (distance 10)
4. (2,6) -> (2,2) (distance 14)
5. (2,2) -> (3,2) (distance 15)
6. (3,2) -> (3,5) (distance 18)
7. (3,5) (distance 18)
> path_least_bites 1 4
1. (2,2) -> (3,2) (distance 1)
2. (3,2) -> (3,5) (distance 4)
3. (3,5) (distance 4)
> path_least_bites 4 3
1. (3,5) -> (3,2) (distance 3)
2. (3,2) -> (2,2) (distance 4)
3. (2,2) -> (2,6) (distance 8)
4. (2,6) -> (6,6) (distance 12)
5. (6,6) -> (6,8) (distance 14)
6. (6,8) -> (2,8) (distance 18)
7. (2,8) (distance 18)
> path_least_bites 2 4
1. (6,6) -> (2,6) (distance 4)
2. (2,6) -> (2,2) (distance 8)
3. (2,2) -> (3,2) (distance 9)
4. (3,2) -> (3,5) (distance 12)
5. (3,5) (distance 12)
> add_connection 04 4 2 (6,5)
Connection:
   id=4
> path_least_bites 1 4
1. (2,2) -> (3,2) (distance 1)
2. (3,2) -> (3,5) (distance 4)
3. (3,5) (distance 4)
> path_least_bites 3 4
1. (2,8) -> (6,8) (distance 4)
2. (6,8) -> (6,6) (distance 6)
3. (6,6) -> (6,5) (distance 7)
4. (6,5) -> (3,5) (distance 10)
5. (3,5) (distance 10)
> path_least_bites 1 3
1. (2,2) -> (2,6) (distance 4)
2. (2,6) -> (6,6) (distance 8)
3. (6,6) -> (6,8) (distance 10)
4. (6,8) -> (2,8) (distance 14)
5. (2,8) (distance 14)
> path_least_bites 4 3
1. (3,5) -> (6,5) (distance 3)
2. (6,5) -> (6,6) (distance 4)
3. (6,6) -> (6,8) (distance 6)
4. (6,8) -> (2,8) (distance 10)
5. (2,8) (distance 10)
> path_least_bites 2 4
1. (6,6) -> (6,5) (distance 1)
2. (6,5) -> (3,5) (distance 4)
3. (3,5) (distance 4)
> 
> 
